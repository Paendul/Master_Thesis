@prefix ex: <http://example.org/> . #change ex into your own namespace to make it into w3id eventually
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .

# Define a class Object
ex:Object a rdfs:Class ; 
    rdfs:label "Object" .
    #add a comment to describe the class
    rdfs:comment "An object in the kitchen that can be manipulated by the robot." .
    # can use schema description instead of rdfs:comment


# Define properties for Object
ex:isDisposable a rdf:Property ; #should be a data property
    rdfs:domain ex:Object ;
    rdfs:range rdfs:Boolean ;
    rdfs:label "is disposable" . 

ex:isTrash a rdf:Property ;
    rdfs:domain ex:Object ;
    rdfs:range rdfs:Boolean ;
    rdfs:label "is trash" . #could be data or object property

ex:isDirty a rdf:Property ;
    rdfs:domain ex:Object ;
    rdfs:range rdfs:Boolean ;
    rdfs:label "is dirty" .

ex:hasVolume a rdf:Property ;
    rdfs:domain ex:Object ;
    rdfs:range rdfs:float ;
    rdfs:label "has volume" .

ex:hasCurrentLocation a rdf:Property ;
    rdfs:domain ex:Object ;
    rdfs:range ex:KitchenComponent ;
    rdfs:label "has current location" .

ex:hasTargetLocation a rdf:Property ;
    rdfs:domain ex:Object ;
    rdfs:range ex:KitchenStorageComponent ;
    rdfs:label "has target location" .


# Define a class Kitchen Component (KC)
ex:KitchenComponent a rdfs:Class ;
    rdfs:label "Kitchen Component" .

# Define properties for Kitchen Component
ex:isDirtyKC a rdf:Property ;
    rdfs:domain ex:KitchenComponent ;
    rdfs:range rdfs:Boolean ;
    rdfs:label "is dirty" .

ex:hasInteractionType a rdf:Property ; # add non unique property
    rdfs:domain ex:KitchenComponent ;
    rdfs:range rdfs:Literal ; #OperableObject, StaticObject, MovableObject
    rdfs:label "has interaction type" .

ex:hasCurrentLocationKC a rdf:Property ;
    rdfs:domain ex:KitchenComponent ;
    rdfs:range ex:coordinate ;
    rdfs:label "has current location" .

ex:hasTargetLocationKC a rdf:Property ;
    rdfs:domain ex:KitchenComponent ;
    rdfs:range ex:coordinate ;
    rdfs:label "has target location" .

ex:isClearKC a rdf:Property ;
    rdfs:domain ex:KitchenComponent ;
    rdfs:range rdfs:Boolean ;
    rdfs:label "is clear" .

### Need to add affordance properties for the kitchen component in hasInteractionType

# Define a subclass of Kitchen Component, Kitchen Stoorage Component (KSC)
ex:KitchenStorageComponent a rdfs:Class ;
    rdfs:subClassOf ex:KitchenComponent ;
    rdfs:label "Kitchen Storage Component" .

# Define properties for Kitchen Storage Component
ex:isFullKSC a rdf:Property ;
    rdfs:domain ex:KitchenStorageComponent ;
    rdfs:range rdfs:Boolean ;
    rdfs:label "is full" .


# Define a class Action for the robot's possible actions
ex:Action a rdfs:Class ;
    rdfs:label "Action" .


